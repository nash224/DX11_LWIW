

 = 개발 Tool = 
 {
	- Visual Studio
	- C++
	- HLSL
	
	= 외부 라이브러리 = 
	{
		- FMOD
		- DirectTex
		- FontWrapper
	}
 }

 = 개발 기반 =
 {
	- GameEngineFrameWork
	- 레벨로 관리
 }


 = 게임 설명 =
 {
	- 짧은 개요
	- 엔딩 조건
 }

 = 메인메뉴(Title) =
 {
	= MainCamera =
	{
		= Z Order =
		{
			- 엔진에서 제공해주는 Z정렬로 그리는 순서 결정
		}

		- 3D 환경 => 엔진에서 지원해주는 프리 카메라 모드로 보면 
		- 깊이 => Z 값이 멀어(커질)수록 멀리 배치됨 
		- 산과 열차가 지나가는 교량 => 위치는 고정으로 설정하고 버텍스 쉐이더에서 UV 값만 올렸다.
			= 기소서 : 옵션, 쉐이더코드, 클래스

		- 구름, 나무 => 특정 위치에 도달하면 액터를 생성되게 했다.
		- 기차 State => 하나씩 올라가고 내려가게
		- 물가에 투영된 텍스처 => 블랜드 옵션::알파 블랜드, 텍스처를 겹쳐서 알파블랜드 적용
	}

	= UI = (카메라 오더가 나중)
	{
		- UI 카메라로 로고와 폰트 
	}
 }

 = 맵 =
 {
	= 액터 =
	{
		- 바닥
		- 소품
		- 상호작용
		- 포탈
	}

	= 에디터 =
	{
		- Imgui
		- 크기, 회전, 이동
		- 선택, 선택해제
		- 렌더 X, Y값 조절
		- 픽셀 데이터 선택 => 사진

		= 세이브, 로드 =
		{
			- 바이너리 데이터 
			- 사용처 : 맵을 구성하는 소품에 사용
		}
	}

	= 픽셀 충돌 =
	{
		- 카메라의 렌더 타겟에 찍힌 텍스처를 픽셀 충돌로 사용
		- 엔진에서 지원해주는 Imgui 디버깅 렌더타겟의 텍스처로 확인 가능
	}
 }

 = 플레이어 =
 {
	= 렌더러 = 
	{
		- 앨리 몸 
		{
			- 상태 기반으로 애니메이션이 변경됨
			- Y값에 따라서 Z 계산
		}

		= 버질(모자 얼굴) =
		{
			- 앨리 몸보다 높게
			- 몸의 프레임 애니메이션 인덱스에 따라 적용
		}

		= 그림자 = 
		{
			- 깊이를 바닥값보다 높게 설정
		}
	}

	= 상태 =
	{
		= 이동 =
		{
			- 입력에 따라 방향 결정
			- 플레이어의 자연스러운 방향전환을 위해 같은 생태일 때, 인덱스 값을 동일하게 적용 => 예시
			- 서있기, 걷기, 천천히 걷기, 달리기
			- 벽과 충돌시 진행방향으로 밀리게 적용
			- 달릴때 스태미나 감소
		}

		= 빗자루 모드 =
		{
			= 특징 =
			{
				- 가속도 적용
				- 속도 최대값
				- 벽이랑 충돌 시 방향 벡터의 반대방향으로 밀어주는 것으로 적용
				- 연료 소모
				- 가속시 2배 소모
			}

			= 상태 =
			{
				- Standing
				- Move
				- Boost
			}

			= 빗자루 연기 =
			{
				- 일정시간마다 생성 (파티클x)
			}
		}

		= 상호작용 =
		{
			- 충돌체의 오더 값에 따라 충돌처리
			- 상호작용 액터 선택 기준
			- 충돌한 객체 중에서 시야 범위 안에 들어온 객체를 선별
			- 디버그로 시야 범위 확인 가능
			- 가장 가까운 액터

			= 상호작용 액터의 옵션 =
			{
				- 버튼 종류
				- 근접과 원격 상호작용
				- 즉시 상호작용 및 지속 상호작용

				= 상호작용 타입 =
				{
					- 다가가서 작호작용 수행
					- Sit => 줍기
					- RootUp => 식물 뽑기
					- Mongsiri => 몽시리 털뽑기
					- Juicy => 재료 가공
					- Lift => 엘리베이터 사용
					- Wait => 가공준비 또는 다른 상호작용
				}

				= 도구 상호작용 =
				{
					- Glove => 일반 채집
					- Net => 잠자리채 채집
					- Pen => 도감 작성 (구현x)
				}
			}
		}
	}
 }

 = 상호작용 액터 종류 =
 {
	= Creature =
	{
		= BranchTree = 
		{
			- 나무를 흔들어 드랍템 나뭇가지를 떨어뜨림
			- 기능으로 CircleGauge를 값형으로 가지고 있음
			- 사용처 없음 (구현x)
		}

		= Bush = 
		{
			= 3가지 타입 =
			{
				- 일반 덤불
				- 사과 덤불
				- BushBug 덤불
			}
		}

		= BushBug = 
		{
			- 일정 방향
			- 채집은 잠자리채로 가능
			- 이동 방향은 수풀에서 벗어나지 않게 조정
			- 발광 기능을 가지고 있어, 밤이 되면 발광효과를 가짐 
		}

		= FlowerBird =
		{
			- 가공재료 새 꽃 채집물을 드랍함
			- 동일한 랜덤 값으로 Idle에서 특정 상태로 전환
			- 기능으로 Emoji를 값형으로 가지고 있음

			= 상태 =
			{
				- Idle => 다음 상태 대기
				- Turn => 방향 전환
				- Pick => 모이쪼기

				= Fly =
				{
					- 플레이어가 접근시 위협을 느껴 날아감
					- 플레이어가 살살 걸으면 일반 범위보다 더 가까이 다가갈 수 있음
					- 날아갈 때, 느낌표 이모지를 출력함
				}

				- Bloom => 일정 시간동안 완전한 꽃을 피움 => 이 때 다가갈시 채집물 새 꽃을 드랍함
				- BloomFake => 꽃을 피우지만 바로 시들어버림 => 이 때 다가갈시 채집물 드랍하지 않음
			}
		}

		= Mongsiri = 
		{
			- 상호작용시 가공재료 몽시리 털을 얻을 수 있음
			- 생성할 때, 2~3마리씩 개체군으로 생성
			- 몽시리를 관리하는 MongSiriPopulation이 몽시리 탈출 구멍 Hole과 몽시리를 관리
			- 기능으로 Emoji를 값형으로 가지고 있음

			= 상태 = 
			{
				- Idle => 주변에 플레이어가 없을 때, 다음 상태 대기
				- Jump => 몽시리가 움직일 때 패턴

				= 개체군 Status

				= Look =
				{
					- State::Look에서 LookState가 업데이트됨

					= Recognize =
					{
						- 일정범위 안에 플레이어가 존재하면 플레이어를 따라 가만히 처다봄
						- 처음 인식했을 때, 이모지 물음표를 띄움
					}

					= NotRecognize = 
					{
						- 인식 상태에서 플레이어가 인식 범위 밖으로 나가면 일정 시간이 지난 후 Idle로 전환
						- 인식 범위 밖으로 나갈 때, 이모지 물음표를 띄움
					}
				}

				- Caught => 플레이어가 상호작용할 때, 원격으로 가만히 있게하는 상태 => 일정범위 안에 들어서면 Collectd로 전환
				- Collected => 채집 상태 => 특정 프레임에 아이템 획득 => 개체군에게 Escape  알림
				- Disappear => 몽시리가 구멍에 들어가는 상태
			}
		}
	}

	= Machine =
	{
		= 착즙기 =
		{
			
		}

		= 연금 솥 =
		{
			
		}

		- 로스터(구현x)
	}

	= Npc =
	{
		= Dian =
		{
			
		}

		= Aurea = 
		{
			
		}
	}

	= Objects =
	{
		= Bed =
		{
			
		}

		= Event Objects =
		{
			- Dust
			- Letter
		}

		= LootedItem = 
		{
			
		}

		= Lift =
		{
			
		}
	}
 }

 = Gauge Renderer =
 {
	- 수평 게이지바
	- 원형 게이지바
 }

 = Effect(PostProcessing) =
 {
	= OutLine =
	{
		- 외곽선
		- 이벤트 및 상호작용 액터 표시로 사용
	}

	= SkyLerp =
	{
		- 밤이 어두워지는 효과 구현
		- 빛 렌더러의 알파값에 따라 필터 알파값 조정
	}
 }


 {
	Email
	Git
 }
